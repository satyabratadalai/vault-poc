pipeline {
    agent any

    stages {
        stage('Fetch Secret') {
            steps {
                script {

                    // Fetch The Env Variables/Input Details
                    echo "Environment Selected : ${MULEENV}"

                    if("${MULEENV}" == 'DEV'){
                        echo "FOR DEV"
                        def vaultPath='secret/mulesoft-dev'
                    }

                    else if("${MULEENV}" == 'UAT'){
                        echo "FOR UAT"
                        def vaultPath='secret/mulesoft-uat'
                    }

                    else if("${MULEENV}" == 'PROD'){
                        echo "FOR PROD"
                        def vaultPath='secret/mulesoft-prod'
                    }

                    else {
                        echo "INVALID ENV"
                    }

                    // Initialize Vault access
                    def secrets = [
                        [$class: 'VaultSecret', path: ${vaultPath}, secretValues: [
                            [$class: 'VaultSecretValue', envVar: 'username', vaultKey: 'username'],
                            [$class: 'VaultSecretValue', envVar: 'password', vaultKey: 'password']
                        ]]
                    ]
                    echo "WORKING"
                    // Fetch secrets from Vault
                    withVault([vaultSecrets: secrets, vaultConfigurationId: 'vault-token']) {
                        def uname = env.username
                        def pw = env.password
                        
                        // Print to console (remove this in production)
                        println("USERNAME: ${uname}")
                        println("PASSWORD: ${pw}")

                        //TEMP TO CHECK
                        writeFile file: 'cred.txt', text: "Username: ${uname}\nPassword: ${pw}"
                    }
                }
            }
        }
    }
}
